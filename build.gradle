buildscript {
	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.source.formatter", version: "latest.release"
	}

	repositories {
		jcenter()
	}
}

apply plugin: "application"
apply plugin: "com.liferay.source.formatter"
apply plugin: "jacoco"

task runVertxCodeGen(type: JavaCompile)

group = "com.github.ithildir"
mainClassName = "io.vertx.core.Launcher"
sourceCompatibility = 1.8

File generatedSrcDir = file("src/main/generated")

check {
	dependsOn checkSourceFormatting
}

compileJava {
	dependsOn runVertxCodeGen
}

dependencies {
	compile group: "ai.api", name: "libai", version: "1.4.8"
	compile group: "com.github.ThangLeQuoc", name: "aqi-calculator", version: "master-SNAPSHOT"
	compile group: "io.vertx", name: "vertx-config", version: "3.4.2"
	compile group: "io.vertx", name: "vertx-core", version: "3.4.2"
	compile group: "io.vertx", name: "vertx-service-proxy", version: "3.4.2"
	compile group: "io.vertx", name: "vertx-web", version: "3.4.2"
	compile group: "io.vertx", name: "vertx-web-client", version: "3.4.2"
	compile group: "org.ocpsoft.prettytime", name: "prettytime", version: "4.0.1.Final"

	compileOnly group: "io.vertx", name: "vertx-codegen", version: "3.4.2"

	testCompile group: "io.vertx", name: "vertx-unit", version: "3.4.2"
	testCompile group: "junit", name: "junit", version: "4.12"
}

jacocoTestReport {
	doFirst {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, excludes: ["**/*VertxEBProxy*", "**/*VertxProxyHandler*"])
		})
	}

	reports {
		xml.enabled = true
	}
}

repositories {
	jcenter()

	maven {
		url "https://jitpack.io"
	}
}

run {
	args "run", "com.github.ithildir.airbot.AirBotVerticle"
}

runVertxCodeGen {
	classpath = configurations.compileClasspath
	description = "Runs the Vert.x code generator."
	destinationDir = generatedSrcDir
	group = "build"

	options.compilerArgs = [
		"-Acodegen.output=${destinationDir.absolutePath}",
		"-proc:only",
		"-processor", "io.vertx.codegen.CodeGenProcessor"
	]

	source = sourceSets.main.java
}

sourceSets {
	main {
		java {
			srcDirs generatedSrcDir
		}
	}
}